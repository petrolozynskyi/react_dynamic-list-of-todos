{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onShowTodoModal","useEffect","fetchUsers","a","fetch","response","json","usersData","console","log","error","className","map","todo","id","completed","title","type","onClick","TodoFilter","onFilterChange","onSearchChange","onClearSearch","useState","searchValue","setSearchValue","onChange","event","value","target","placeholder","style","pointerEvents","Loader","TodoModal","onCloseTodoModal","loading","setLoading","user","setUser","fetchUser","userId","userData","name","App","setTodos","users","setUsers","showModal","setShowModal","selectedTodo","setSelectedTodo","filterValue","setFilterValue","then","data","catch","filteredTodos","filter","titleMatch","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a53052a7.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n\ninterface TodoListProps {\n  todos: Todo[];\n  /* eslint-disable */\n\n  users: User[];\n  onShowTodoModal: (todo: Todo) => void;\n}\n\ninterface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n}\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  onShowTodoModal,\n}) => {\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        // eslint-disable-next-line max-len\n        const response = await fetch('https://mate-academy.github.io/react_dynamic-list-of-todos/api/users.json');\n        const usersData = await response.json();\n\n        console.log(usersData);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={`has-text-${todo.completed ? 'success' : 'danger'}`}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onShowTodoModal(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\n\ninterface TodoFilterProps {\n  onFilterChange: (value: string) => void;\n  onSearchChange: (value: string) => void;\n  onClearSearch: () => void;\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  onFilterChange,\n  onSearchChange,\n  onClearSearch,\n}) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    onFilterChange(value);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setSearchValue(value);\n    onSearchChange(value);\n  };\n\n  const handleClearSearch = () => {\n    setSearchValue('');\n    onClearSearch();\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleFilterChange}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={handleSearchChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n              aria-label=\"Clear Search\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\n\ninterface TodoModalProps {\n  todo: Todo;\n  /* eslint-disable */\n\n  users: User[];\n  onCloseTodoModal: () => void;\n}\n\ninterface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId?: number;\n}\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  todo,\n  onCloseTodoModal,\n}) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        if (todo.userId) {\n          const response = await fetch(\n            `https://mate-academy.github.io/react_dynamic-list-of-todos/api/users/${todo.userId}.json`,\n          );\n          const userData = await response.json();\n\n          setUser(userData);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching user:', error);\n      }\n    };\n\n    fetchUser();\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close\"\n              onClick={onCloseTodoModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            {user && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong className={`has-text-${todo.completed ? 'success' : 'danger'}`}>\n                  {todo.completed ? 'Done' : 'Planned'}\n                </strong>\n                {' by '}\n                {user.name}\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\ninterface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n}\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterValue, setFilterValue] = useState('all');\n  const [searchValue, setSearchValue] = useState('');\n\n  useEffect(() => {\n    // eslint-disable-next-line max-len\n    fetch('https://mate-academy.github.io/react_dynamic-list-of-todos/api/todos.json')\n      .then((response) => response.json())\n      .then((data) => setTodos(data))\n      .catch((error) => (error));\n\n    // eslint-disable-next-line max-len\n    fetch('https://mate-academy.github.io/react_dynamic-list-of-todos/api/users.json')\n      .then((response) => response.json())\n      .then((data) => setUsers(data))\n      .catch((error) => (error));\n  }, []);\n\n  const handleShowTodoModal = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setShowModal(true);\n  };\n\n  const handleCloseTodoModal = () => {\n    setSelectedTodo(null);\n    setShowModal(false);\n  };\n\n  const handleFilterChange = (value: string) => {\n    setFilterValue(value);\n  };\n\n  const handleSearchChange = (value: string) => {\n    setSearchValue(value);\n  };\n\n  const handleClearSearch = () => {\n    setSearchValue('');\n  };\n\n  const filteredTodos = todos.filter((todo) => {\n    const titleMatch = todo.title.toLowerCase()\n      .includes(searchValue.toLowerCase());\n\n    if (filterValue === 'all') {\n      return titleMatch;\n    }\n\n    if (filterValue === 'active') {\n      return !todo.completed && titleMatch;\n    }\n\n    if (filterValue === 'completed') {\n      return todo.completed && titleMatch;\n    }\n\n    return false;\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterChange={handleFilterChange}\n                onSearchChange={handleSearchChange}\n                onClearSearch={handleClearSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  users={users}\n                  onShowTodoModal={handleShowTodoModal}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          users={users}\n          onCloseTodoModal={handleCloseTodoModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}